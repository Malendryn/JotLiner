file:///mnt/local/git/project.jotliner/client/html/modules/core/fem_core_DCH_BASE.js {"mtime":1743733663925,"ctime":1743484738065,"size":2800,"etag":"3e2erag1q2sa","orphaned":false,"typeId":""}
// herein is the base class of all DocumentComponentHandlers

// we use the term 'pixel' although we mean unit as a fixed-size-in-space by which everything must abide.
// we use the term 'pixel' because it is the one constant we can be guaranteed to display on any screen device 


// NOTE: see dcd_Document.js as the first document component needed in any document


FG.DCH_BASE = class DCH_BASE {   // base class of all document components
    type = 1;           // ALL that inherit from this, will be type=1 (see DOCFORMAT)
    X;Y;                // X,Y  pixel-relative To parent's 0,0 (negative vals are allowed)
    W;H;                // Width Height of contents in pixels
//    zDepth;               // order of displaying, (higher#s are above/onTopOf lower#s, 0 is furthest away)

    parent = null;              // parent handler (or null if toplevel)
    
/* these elements are not of the BASE but are here until we move them somewhere else
    border = {          // borders take space INSIDE the W/H
        color : [0, 0, 0, 0],   // RGBA border color  (as x00 to xFF)
        width : 1,              // width in pixels
        style : 0,              // 0=solid, 1=dashed, 2=dotted, 3=..?
    }
    bgColor = [0, 0, 0, 0];     // RGBA border color  (as x00 to xFF)
*/


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// must-ALWAYS-override functions --------------------------------------------------------------------------------------------
    async parse(sr)   {        await _errorP(sr); }    // load StreamReader data into object for displaying
    async unparse()   { return await _errorU();   }    // unload displayable data, return as a str (for saving)

    async render()    { await _render.call(this); }    // rerender entire object and all its children

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// optional override functions ----------------------------------------------------------------------------------------
//  async init()     {};                              // called immediately after class is finished creation (do we need this?)
    async resize(w, h) { _resize.call(this, w, h); }  // resize box (but not contents!) to new dimensions and rebuild contents as needed

    constructor() {
    };
}; // end class


async function _render(sr) {

}

async function _errorP(sr) {
    throw new Error("DCH_BASE parse(sr) not overridden");
}

async function _errorU() {
    throw new Error("DCH_BASE unparse() not overridden");
}

async function _resize(width, height) {   // change size of box (not contents!) and then rerender
    debugger;
    this.W = width;
    this.H = height;
    this.render();
}


