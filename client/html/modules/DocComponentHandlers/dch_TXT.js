
class DCH_TXT extends FG.DCH_BASE {
    txt = "";

// baseclass functions that are overridden below
    // async load(sr, parent)  // load content
    // async unload()          // load content
    // async render()          // render entire object and all its children

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    constructor() {
        super();
    };


    async load(sr, parent) {
        let chunk = await super.load(sr, parent);
        this.txt = chunk;
    }
    
    
    async unload() {     // this loader loads the 'out of band' stuff not specifically inside a component
        debugger; await super.unload();
    }
    
    
    async render() {
        let div = await super.render();
        div.innerHTML = this.txt;
    }
};
export { DCH_TXT as DCH };      // always export 'as DCH' for docloader to attach to globalThis.DCH
