
-----------------------------------------------------------------------------------------------------------------------
Review the licenses and licensed files to make sure everything's in place as it should.
don't forget that when we add the Colorpikr to license it appropriately!
-----------------------------------------------------------------------------------------------------------------------
PLUGIN:  Shopping list!   one of the few 'phone-capable' plugins  (the problem is without a server on the phone...)
-----------------------------------------------------------------------------------------------------------------------
add copy/paste  (see cherrytree "cut/copy/paste and HTTPS")
-----------------------------------------------------------------------------------------------------------------------
with the new LocalStore class we can get rid of FG.curDbName (now LS.curDb)  and maybe a few other refs that are now in 
    LocalStore  (EG: search for LS.curdoc as there are places that have const uuid=LS.curDoc)
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
consider making a conscious decision to stop calling things client/server OR to stop calling them backend/frontend,
(pick one, not toggle between both!)  99% of the code is calling it Back/Front and that would be a massive painful
    change!
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
dbver 5->6
*) add 'bump' to every table
*) add new 'dch' table
*) go through each doc table and yank it apart, putting all the dch elements into the dch table
*) remove 'content' field from doc table

REMEMBER NOW WHEN DELETING FROM table:doc WE ALSO HAVE TO DELETE ALL ITS KIDS IN table:dch

so now also when editing a loaded dch we need to know its recid even though this is something that never needed to happen
before.
-----------------------------------------------------------------------------------------------------------------------
rework contextmenus:
index contextmenu
    change these two:
        {action:"newDocAtSame",  label:"New document",            tip:"Insert a new document below the selected one"},
        {action:"newDocAsChild", label:"New child document",      tip:"Insert a new document as a child of the selected one"},
    to a single one, and in the dialog add a checkmark 'as childof' instead  (see onCtxImport() for its radiobuttons on this)
    .... so that it now matches the 'import' dialog style
docview contextmenu
    A) consider on the menu for inserting plugins to add them as a submenu and not use the phrase "Insert New" in such a way 
        that makes plugins named "My Plugin" seem awkwared, (Insert New My Plugin just doesn't read well! )
    B) once we do this, go repair the "HOWTO create a plugin.odt" file too
-----------------------------------------------------------------------------------------------------------------------
Would it make sense to break every 'doc' down into per-plugin records in the DB?  It would make for much shorter and 
quicker push-pulls and collaboration read-writes!  (This would also allow each plugin to handle their own undo-redo without
affecting other plugins)
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
Would it make sense to put autoSave into DCH_<type>BASE?  if we did we could make the default timeout different per-plugin!
-----------------------------------------------------------------------------------------------------------------------
changes to "Layout, anchors and depth" dialog
    * add zX/zY properties to the 'layout, anchors and depth' dialog
        * in add a 'zero x/y' button to the infinity offset
    * add depth inc/dec/back/front buttons somewhere (with numerics such as depth="5 of 10" ...
    * add a 'fill parent' button that sets TBLR to '0px' and WH to '' (transform: already accts for zX/Y)
    * add a 'fill to next object' button that fills the open area until it runs into other objects
    * click+drag 'accelerators' in the properties window that fast-move coords kindalike blender does
-----------------------------------------------------------------------------------------------------------------------
add a new 'properties' menuOption that's dch-specific
    for most divs allow 
        backgroundcolor (including alpha)  -- (default to 'transparent' for things like textArea so that setting this in dch properties works)
        borderType (1px red dashed)
        font, 
for fonts we should include our own ONLY so as to maintain compatibility across browsers/os's/installs
-----------------------------------------------------------------------------------------------------------------------
make docTree dragdrop work properly!  (reordering of doctree documents)
    move docs (dragdrop, in/out depth too)
-----------------------------------------------------------------------------------------------------------------------
we can now create and select db's, but we can't delete them yet  (when we do, force them to be empty?)
-----------------------------------------------------------------------------------------------------------------------
in properties popup for DCH_BOX we want to show 'infinite Pan offset' and let user edit it (in the properties popup!)
-----------------------------------------------------------------------------------------------------------------------
NICE TO HAVE if when mode1 we could drag corners of a box that we see the shadow of but the corner we want to drag
is invisible cuz it's outside the frame of the parent BOX
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
PRE-GITHUB Todos

* front/back depth of dch's within document
* cut/copy/paste dch's (or delete/copy/move wherein copy/move .cursor('x') the mouseIcon til you click to drop)
* dialogs like colorwheel rgba
        we will use Pickr (see TEST_Pickr.html)  but we want a local copy so no src="https://..."
            remember how to handle the MIT licence on it properly!
* add more 'demo' dch's like 
    SSHT spreadsheet, 
    IMG pic(gif/jpg/png) although technically CTE does this
    IDEF0 IDEF0 (also named like this to show that names are not restricted to 3 characters!)
    DWG (drawing program)
    CODE codeblock (monospaced, linenumbered)
    MDN Markdown (Github compatible)
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
TODO
* I kinda like the little icon cherrytree puts in front of the index entries, but maybe instead we just make a little box
    that you can set the color of?  or maybe (and/or) color the entire entry?

* ?UNDO?  Plugins will have to handle their own as I have no idea what they're doing and while I could track every 
    mousemove and keyclick, I can't know how to undo what that did inside a plugin.   I CAN undo what happens to the 
    main software and dch placement/sizing etc,  so we'll have to work on THAT undo

* we should consider timestamping the ‘send-expect’ed packet in the queue (we do, actually) and maybe once a sec check 
    for ‘dead’ packets (we don't do, yet)  maybe even adding a ‘timeoutLength’ option too
    and also a way to cancel-expect so at least on the client side we can say ‘try again’ sooner so we don't end up 
    with two responses
-----------------------------------------------------------------------------------------------------------------------
Come up with a simple WS packet for plugins to use,  something that can create/delete tables in the DB so that they
never have to modify the server or client .js in order to add features to the serverside
(do we really need something like this?  lets worry about this later or until we do)
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
LOWER PRIORITY STUFF -- LOWER PRIORITY STUFF -- LOWER PRIORITY STUFF -- LOWER PRIORITY STUFF -- LOWER PRIORITY STUFF -- 
-----------------------------------------------------------------------------------------------------------------------
add using cmdCombo+arrowkeys to move the boxes one pixel at a time
    problem with this is as I have to remain hovering over the object to move, but that's not really a biggie is it?
        of course if you shift the box away from the mouse you'll have issues...
-----------------------------------------------------------------------------------------------------------------------
#######################################################################################################################
TODO: consider requestAnimationFrame()  (We haven't needed it ... yet!)

when dragging DCH_BOX children, the mouse activity is entirely delta-from-prior-movement based, and this can get
glitchy.  The proper way to do it is to track the box's position seperately (for example trap boxData at moment of
mousedown) and delta it from there, calling 'id = requestAnimationFrame()' to do actual boxMovement and scrollboxSizing
(and with the id we can call cancelAnimationFrame() to remove any unprocessed ones off the queue first)

NOTE: I can't know if a returned id actually fired but I can track it myself with an incrementer or a [] of id's, and 
then have the requestAnimationFrame's (callback) delete its own id from the list,  thereby letting me iterate through
the list of uncancelled ones and cancelling them

howabout array.push(requestAnimationFrame(callbacK)) and then in callback delete that id from array cuz its now 
processing, and then also before calling array.push(...) iterate through the array and cancelAnimationFrame() 
on any id's still present (and empty the array too)

const frameArray = [];
function scheduleFrame(data) {
    for (let idx = 0; idx < frameArray.length; idx++) {   // cancel all non-processed frames
        cancelAnimationFrame(frameArray[idx]);
    }
    frameArray.length = 0;  // blowout the array
    const id = requestAnimationFrame(() => {
        ProcessData(data);
        const index = frameArray.indexOf(frameId);
          frameArray.splice(index, 1); // Remove the ID from the array
    });
    frameArray.push(id);
}

scheduleFrame("test");
#######################################################################################################################
-----------------------------------------------------------------------------------------------------------------------
#######################################################################################################################
#######################################################################################################################
When we get around toa DCH_LightBASE (which we aren't going to worry about until we need it) we need to do the following:
* remove all the attachShadow and remove the extra divs relevant to it
* remove the <div>s in place for <style> blocks

add a DFStyleTracker that uses a GLOBAL adder for <head>-based styles, and add a LOCAL DFStyleTracker that adds and
removes from the global one so that when we removeAll on the local one, all it does is decrement the global one.
#######################################################################################################################
#######################################################################################################################
-----------------------------------------------------------------------------------------------------------------------
